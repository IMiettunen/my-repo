# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import datetime


class Ui_main_window(object):

    def get_today_tab(self):
        self.today_tab = QtWidgets.QWidget()
        self.today_tab.setObjectName("today_tab")
        self.today_scroll_area = QtWidgets.QScrollArea(self.today_tab)
        self.today_scroll_area.setGeometry(QtCore.QRect(0, 0, 1300, 871))
        self.today_scroll_area.setWidgetResizable(True)
        self.today_scroll_area.setObjectName("today_scroll_area")

        self.today_scroll_area_contents = QtWidgets.QWidget()
        self.today_scroll_area_contents.setGeometry(QtCore.QRect(0, 0, 1300, 869))
        self.today_scroll_area_contents.setObjectName("today_scroll_area_contents")

        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.today_scroll_area_contents)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(0, 0, 1300, 61))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")

        self.today_scroll_area_layout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.today_scroll_area_layout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.today_scroll_area_layout.setContentsMargins(325, 18, 325, 6)
        self.today_scroll_area_layout.setObjectName("today_scroll_area_layout")
        self.today_title_layout = QtWidgets.QHBoxLayout()
        self.today_title_layout.setObjectName("today_title_layout")
        self.today_city_name_label = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        self.today_city_name_label.setText("City name")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.today_city_name_label.sizePolicy().hasHeightForWidth())
        self.today_city_name_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.today_city_name_label.setFont(font)
        self.today_city_name_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.today_city_name_label.setAutoFillBackground(False)
        self.today_city_name_label.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.today_city_name_label.setObjectName("today_city_name_label")
        self.today_title_layout.addWidget(self.today_city_name_label)
        self.today_update_button_layout = QtWidgets.QHBoxLayout()
        self.today_update_button_layout.setSpacing(18)
        self.today_update_button_layout.setObjectName("today_update_button_layout")
        self.today_update_button_label = QtWidgets.QLabel(self.verticalLayoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.today_update_button_label.sizePolicy().hasHeightForWidth())
        self.today_update_button_label.setSizePolicy(sizePolicy)
        self.today_update_button_label.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTop | QtCore.Qt.AlignTrailing)
        self.today_update_button_label.setObjectName("today_update_button_label")
        self.today_update_button_label.setText("Last updated 00.00")
        self.today_update_button_layout.addWidget(self.today_update_button_label)
        self.today_update_push_button = QtWidgets.QPushButton(self.verticalLayoutWidget_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.today_update_push_button.sizePolicy().hasHeightForWidth())
        self.today_update_push_button.setSizePolicy(sizePolicy)
        self.today_update_push_button.setObjectName("today_update_push_button")
        self.today_update_push_button.setText("Update")
        self.today_update_button_layout.addWidget(self.today_update_push_button)
        self.today_title_layout.addLayout(self.today_update_button_layout)
        self.today_scroll_area_layout.addLayout(self.today_title_layout)
        self.today_scroll_area.setWidget(self.today_scroll_area_contents)

        return self.today_tab


    def get_history_tab(self):
        self.history_tab = QtWidgets.QWidget()
        self.history_tab.setObjectName("history_tab")
        self.history_scroll_area = QtWidgets.QScrollArea(self.history_tab)
        self.history_scroll_area.setGeometry(QtCore.QRect(0, 0, 1300, 870))
        self.history_scroll_area.setWidgetResizable(True)
        self.history_scroll_area.setObjectName("history_scroll_area")
        self.history_scroll_area_contents = QtWidgets.QWidget()
        self.history_scroll_area_contents.setGeometry(QtCore.QRect(0, 0, 1300, 868))
        self.history_scroll_area_contents.setObjectName("history_scroll_area_contents")
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.history_scroll_area_contents)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(0, 0, 1300, 61))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.history_scroll_area_layout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.history_scroll_area_layout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.history_scroll_area_layout.setContentsMargins(325, 18, 325, 6)
        self.history_scroll_area_layout.setObjectName("history_scroll_area_layout")
        self.history_title_layout = QtWidgets.QHBoxLayout()
        self.history_title_layout.setObjectName("history_title_layout")
        self.history_city_name_label = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.history_city_name_label.sizePolicy().hasHeightForWidth())
        self.history_city_name_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.history_city_name_label.setFont(font)
        self.history_city_name_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.history_city_name_label.setAutoFillBackground(False)
        self.history_city_name_label.setAlignment(QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.history_city_name_label.setObjectName("history_city_name_label")
        self.history_city_name_label.setText("City name")
        self.history_title_layout.addWidget(self.history_city_name_label)
        self.history_save_button_layout = QtWidgets.QHBoxLayout()
        self.history_save_button_layout.setSpacing(18)
        self.history_save_button_layout.setObjectName("history_save_button_layout")
        self.history_save_button_label = QtWidgets.QLabel(self.verticalLayoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.history_save_button_label.sizePolicy().hasHeightForWidth())
        self.history_save_button_label.setSizePolicy(sizePolicy)
        self.history_save_button_label.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTop | QtCore.Qt.AlignTrailing)
        self.history_save_button_label.setObjectName("history_save_button_label")
        self.history_save_button_label.setText("Save timeline with these settings")
        self.history_save_button_layout.addWidget(self.history_save_button_label)
        self.history_save_push_button = QtWidgets.QPushButton(self.verticalLayoutWidget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.history_save_push_button.sizePolicy().hasHeightForWidth())
        self.history_save_push_button.setSizePolicy(sizePolicy)
        self.history_save_push_button.setObjectName("history_save_push_button")
        self.history_save_push_button.setText("Save")
        self.history_save_button_layout.addWidget(self.history_save_push_button)
        self.history_title_layout.addLayout(self.history_save_button_layout)
        self.history_scroll_area_layout.addLayout(self.history_title_layout)
        self.history_scroll_area.setWidget(self.history_scroll_area_contents)

        return self.history_tab


    def get_compare_tab(self):
        self.compare_tab = QtWidgets.QWidget()
        self.compare_tab.setObjectName("compare_tab")
        self.compare_scroll_area = QtWidgets.QScrollArea(self.compare_tab)
        self.compare_scroll_area.setGeometry(QtCore.QRect(0, 0, 1300, 870))
        self.compare_scroll_area.setWidgetResizable(True)
        self.compare_scroll_area.setObjectName("compare_scroll_area")
        self.compare_scroll_area_contents = QtWidgets.QWidget()
        self.compare_scroll_area_contents.setGeometry(QtCore.QRect(0, 0, 1300, 868))
        self.compare_scroll_area_contents.setObjectName("compare_scroll_area_contents")
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.compare_scroll_area_contents)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(0, 0, 1300, 61))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.compare_scroll_area_layout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.compare_scroll_area_layout.setContentsMargins(25, 18, 25, 6)
        self.compare_scroll_area_layout.setSpacing(25)
        self.compare_scroll_area_layout.setObjectName("compare_scroll_area_layout")
        self.left_compare_title_layout = QtWidgets.QHBoxLayout()
        self.left_compare_title_layout.setObjectName("left_compare_title_layout")
        self.left_compare_city_name_label = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.left_compare_city_name_label.sizePolicy().hasHeightForWidth())
        self.left_compare_city_name_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.left_compare_city_name_label.setFont(font)
        self.left_compare_city_name_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.left_compare_city_name_label.setAutoFillBackground(False)
        self.left_compare_city_name_label.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.left_compare_city_name_label.setObjectName("left_compare_city_name_label")
        self.left_compare_city_name_label.setText("City name")

        self.left_compare_title_layout.addWidget(self.left_compare_city_name_label)
        self.left_compare_load_timeline_button_layout = QtWidgets.QHBoxLayout()
        self.left_compare_load_timeline_button_layout.setSpacing(18)
        self.left_compare_load_timeline_button_layout.setObjectName("left_compare_load_timeline_button_layout")
        self.left_compare_load_timeline_label = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.left_compare_load_timeline_label.sizePolicy().hasHeightForWidth())
        self.left_compare_load_timeline_label.setSizePolicy(sizePolicy)
        self.left_compare_load_timeline_label.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTop | QtCore.Qt.AlignTrailing)
        self.left_compare_load_timeline_label.setObjectName("left_compare_load_timeline_label")
        self.left_compare_load_timeline_label.setText("Load timeline")
        self.left_compare_load_timeline_button_layout.addWidget(self.left_compare_load_timeline_label)
        self.left_compare_load_timeline_push_button = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.left_compare_load_timeline_push_button.sizePolicy().hasHeightForWidth())
        self.left_compare_load_timeline_push_button.setSizePolicy(sizePolicy)
        self.left_compare_load_timeline_push_button.setObjectName("left_compare_load_timeline_push_button")
        self.left_compare_load_timeline_push_button.setText("Load")
        self.left_compare_load_timeline_button_layout.addWidget(self.left_compare_load_timeline_push_button)
        self.left_compare_title_layout.addLayout(self.left_compare_load_timeline_button_layout)
        self.compare_scroll_area_layout.addLayout(self.left_compare_title_layout)
        self.compare_separator_line = QtWidgets.QFrame(self.horizontalLayoutWidget_4)
        self.compare_separator_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.compare_separator_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.compare_separator_line.setObjectName("compare_separator_line")
        self.compare_scroll_area_layout.addWidget(self.compare_separator_line)


        self.right_compare_title_layout = QtWidgets.QHBoxLayout()
        self.right_compare_title_layout.setObjectName("right_compare_title_layout")
        self.right_compare_city_name_label = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.right_compare_city_name_label.sizePolicy().hasHeightForWidth())
        self.right_compare_city_name_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.right_compare_city_name_label.setFont(font)
        self.right_compare_city_name_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.right_compare_city_name_label.setAutoFillBackground(False)
        self.right_compare_city_name_label.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignTop)
        self.right_compare_city_name_label.setObjectName("right_compare_city_name_label")
        self.right_compare_city_name_label.setText("City name")
        self.right_compare_title_layout.addWidget(self.right_compare_city_name_label)
        self.right_compare_load_timeline_button_layout = QtWidgets.QHBoxLayout()
        self.right_compare_load_timeline_button_layout.setSpacing(18)
        self.right_compare_load_timeline_button_layout.setObjectName("right_compare_load_timeline_button_layout")
        self.right_compare_load_timeline_label = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.right_compare_load_timeline_label.sizePolicy().hasHeightForWidth())
        self.right_compare_load_timeline_label.setSizePolicy(sizePolicy)
        self.right_compare_load_timeline_label.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTop | QtCore.Qt.AlignTrailing)
        self.right_compare_load_timeline_label.setObjectName("right_compare_load_timeline_label")
        self.right_compare_load_timeline_label.setText("Load timeline")
        self.right_compare_load_timeline_button_layout.addWidget(self.right_compare_load_timeline_label)
        self.right_compare_load_timeline_push_button = QtWidgets.QPushButton(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.right_compare_load_timeline_push_button.sizePolicy().hasHeightForWidth())
        self.right_compare_load_timeline_push_button.setSizePolicy(sizePolicy)
        self.right_compare_load_timeline_push_button.setObjectName("right_compare_load_timeline_push_button")
        self.right_compare_load_timeline_push_button.setText("Load")
        self.right_compare_load_timeline_button_layout.addWidget(self.right_compare_load_timeline_push_button)
        self.right_compare_title_layout.addLayout(self.right_compare_load_timeline_button_layout)
        self.compare_scroll_area_layout.addLayout(self.right_compare_title_layout)
        self.compare_scroll_area.setWidget(self.compare_scroll_area_contents)

        return self.compare_tab


    def get_side_panel(self, main_window):
        self.side_panel = QtWidgets.QWidget(main_window)
        self.side_panel.setGeometry(QtCore.QRect(0, -60, 300, 900))
        self.side_panel.setObjectName("side_panel")

        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.side_panel)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(0, 60, 300, 580))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")

        self.side_panel_items_layout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.side_panel_items_layout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.side_panel_items_layout.setContentsMargins(18, 6, 18, 0)
        self.side_panel_items_layout.setSpacing(18)
        self.side_panel_items_layout.setObjectName("side_panel_items_layout")

        self.application_title_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.application_title_label.sizePolicy().hasHeightForWidth())
        self.application_title_label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(16)
        self.application_title_label.setFont(font)
        self.application_title_label.setObjectName("application_title_label")
        self.application_title_label.setText("Road Watch")
        self.side_panel_items_layout.addWidget(self.application_title_label)

        self.city_selection_layout = QtWidgets.QVBoxLayout()
        self.city_selection_layout.setObjectName("city_selection_layout")
        self.city_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.city_label.sizePolicy().hasHeightForWidth())
        self.city_label.setSizePolicy(sizePolicy)
        self.city_label.setObjectName("city_label")
        self.city_label.setText("City")
        self.city_selection_layout.addWidget(self.city_label)
        self.city_selection_combo_box = QtWidgets.QComboBox(self.verticalLayoutWidget_4)
        self.city_selection_combo_box.setObjectName("city_selection_combo_box")
        self.city_selection_combo_box.addItem("")
        self.city_selection_combo_box.setCurrentText("Helsinki")
        self.city_selection_combo_box.setItemText(0, "Helsinki")
        self.city_selection_combo_box.addItem("")
        self.city_selection_combo_box.setItemText(1, "Espoo")
        self.city_selection_combo_box.addItem("")
        self.city_selection_combo_box.setItemText(2, "Tampere")
        self.city_selection_combo_box.addItem("")
        self.city_selection_combo_box.setItemText(3, "Vantaa")
        self.city_selection_combo_box.addItem("")
        self.city_selection_combo_box.setItemText(4, "Oulu")
        self.city_selection_layout.addWidget(self.city_selection_combo_box)
        self.side_panel_items_layout.addLayout(self.city_selection_layout)
        self.data_selection_layout = QtWidgets.QVBoxLayout()
        self.data_selection_layout.setContentsMargins(0, -1, -1, -1)
        self.data_selection_layout.setSpacing(5)
        self.data_selection_layout.setObjectName("data_selection_layout")

        self.weather_info_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)
        self.weather_info_checkbox.setObjectName("weather_info_checkbox")
        self.weather_info_checkbox.setText("Weather info")
        self.data_selection_layout.addWidget(self.weather_info_checkbox)
        self.road_info_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)

        self.road_info_checkbox.stateChanged.connect(self.select_all_sub_selections)
        self.road_info_checkbox.setObjectName("road_info_checkbox")
        self.road_info_checkbox.setText("Road info")
        self.data_selection_layout.addWidget(self.road_info_checkbox)

        self.weather_info_sub_selection_layout = QtWidgets.QVBoxLayout()
        self.weather_info_sub_selection_layout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.weather_info_sub_selection_layout.setContentsMargins(18, -1, -1, -1)
        self.weather_info_sub_selection_layout.setSpacing(5)
        self.weather_info_sub_selection_layout.setObjectName("weather_info_sub_selection_layout")

        self.road_camera_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)
        self.road_camera_checkbox.stateChanged.connect(self.change_sub_selection_state)
        self.road_camera_checkbox.setObjectName("road_camera_checkbox")
        self.road_camera_checkbox.setText("Road camera")
        self.weather_info_sub_selection_layout.addWidget(self.road_camera_checkbox)

        self.traffic_messages_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)
        self.traffic_messages_checkbox.stateChanged.connect(self.change_sub_selection_state)
        self.traffic_messages_checkbox.setObjectName("traffic_messages_checkbox")
        self.traffic_messages_checkbox.setText("Traffic messages")
        self.weather_info_sub_selection_layout.addWidget(self.traffic_messages_checkbox)

        self.road_maintenance_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)
        self.road_maintenance_checkbox.stateChanged.connect(self.change_sub_selection_state)
        self.road_maintenance_checkbox.setObjectName("road_maintenance_checkbox")
        self.road_maintenance_checkbox.setText("Road maintenance")
        self.weather_info_sub_selection_layout.addWidget(self.road_maintenance_checkbox)

        self.road_condition_checkbox = QtWidgets.QCheckBox(self.verticalLayoutWidget_4)
        self.road_condition_checkbox.stateChanged.connect(self.change_sub_selection_state)
        self.road_condition_checkbox.setObjectName("road_condition_checkbox")
        self.road_condition_checkbox.setText("Road condition")
        self.weather_info_sub_selection_layout.addWidget(self.road_condition_checkbox)

        self.road_info_sub_selection_checkboxes = [self.road_camera_checkbox, self.traffic_messages_checkbox, self.road_maintenance_checkbox, self.road_condition_checkbox]

        self.data_selection_layout.addLayout(self.weather_info_sub_selection_layout)
        self.side_panel_items_layout.addLayout(self.data_selection_layout)
        self.save_favourite_layout = QtWidgets.QHBoxLayout()
        self.save_favourite_layout.setSpacing(18)
        self.save_favourite_layout.setObjectName("save_favourite_layout")
        self.save_favourite_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.save_favourite_label.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.save_favourite_label.setObjectName("save_favourite_label")
        self.save_favourite_label.setText("Save as favourite")
        self.save_favourite_layout.addWidget(self.save_favourite_label)
        self.save_favourite_push_button = QtWidgets.QPushButton(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.save_favourite_push_button.sizePolicy().hasHeightForWidth())
        self.save_favourite_push_button.setSizePolicy(sizePolicy)
        self.save_favourite_push_button.setObjectName("save_favourite_push_button")
        self.save_favourite_push_button.setText("Save")
        self.save_favourite_layout.addWidget(self.save_favourite_push_button)
        self.side_panel_items_layout.addLayout(self.save_favourite_layout)
        self.menu_line_1 = QtWidgets.QFrame(self.verticalLayoutWidget_4)
        self.menu_line_1.setFrameShape(QtWidgets.QFrame.HLine)
        self.menu_line_1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.menu_line_1.setObjectName("menu_line_1")
        self.side_panel_items_layout.addWidget(self.menu_line_1)
        self.favourite_selection_layout = QtWidgets.QVBoxLayout()
        self.favourite_selection_layout.setObjectName("favourite_selection_layout")
        self.favourite_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.favourite_label.sizePolicy().hasHeightForWidth())
        self.favourite_label.setSizePolicy(sizePolicy)
        self.favourite_label.setObjectName("favourite_label")
        self.favourite_label.setText("Favourite views")
        self.favourite_selection_layout.addWidget(self.favourite_label)
        self.favourite_selection_combo_box = QtWidgets.QComboBox(self.verticalLayoutWidget_4)
        self.favourite_selection_combo_box.setCurrentText("")
        self.favourite_selection_combo_box.setObjectName("favourite_selection_combo_box")
        self.favourite_selection_layout.addWidget(self.favourite_selection_combo_box)
        self.side_panel_items_layout.addLayout(self.favourite_selection_layout)
        self.timeline_selection_layout = QtWidgets.QVBoxLayout()
        self.timeline_selection_layout.setContentsMargins(-1, 36, -1, -1)
        self.timeline_selection_layout.setSpacing(6)
        self.timeline_selection_layout.setObjectName("timeline_selection_layout")
        self.menu_line_2 = QtWidgets.QFrame(self.verticalLayoutWidget_4)
        self.menu_line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.menu_line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.menu_line_2.setObjectName("menu_line_2")
        self.timeline_selection_layout.addWidget(self.menu_line_2)

        self.timeline_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.timeline_label.setFont(font)
        self.timeline_label.setObjectName("timeline_label")
        self.timeline_label.setText("Select timeline")
        self.timeline_selection_layout.addWidget(self.timeline_label)

        self.date_selections_layout = QtWidgets.QHBoxLayout()
        self.date_selections_layout.setSpacing(18)
        self.date_selections_layout.setObjectName("date_selections_layout")

        self.start_date_selection_layout = QtWidgets.QVBoxLayout()
        self.start_date_selection_layout.setObjectName("start_date_selection_layout")
        self.start_date_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.start_date_label.setObjectName("start_date_label")
        self.start_date_label.setText("Start date")
        self.start_date_selection_layout.addWidget(self.start_date_label)
        self.start_date_edit = QtWidgets.QDateEdit(self.verticalLayoutWidget_4)
        self.start_date_edit.setCalendarPopup(True)

        date = QtCore.QDate.currentDate()
        self.start_date_edit.setDate(date)
        self.start_date_edit.setMaximumDate(date)
        self.start_date_edit.dateChanged.connect(self.set_max_min_dates)
        self.start_date_edit.setObjectName("start_date_edit")
        self.start_date_selection_layout.addWidget(self.start_date_edit)
        self.date_selections_layout.addLayout(self.start_date_selection_layout)

        self.end_date_selection_layout = QtWidgets.QVBoxLayout()
        self.end_date_selection_layout.setObjectName("end_date_selection_layout")
        self.end_date_label = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.end_date_label.setObjectName("end_date_label")
        self.end_date_label.setText("End date")
        self.end_date_selection_layout.addWidget(self.end_date_label)
        self.end_date_edit = QtWidgets.QDateEdit(self.verticalLayoutWidget_4)
        self.end_date_edit.setCalendarPopup(True)
        self.end_date_edit.setDate(date)
        self.end_date_edit.setMinimumDate(date)
        self.end_date_edit.setMaximumDate(date)
        self.end_date_edit.dateChanged.connect(self.set_max_min_dates)
        self.end_date_edit.setObjectName("end_date_edit")
        self.end_date_selection_layout.addWidget(self.end_date_edit)

        self.date_selections_layout.addLayout(self.end_date_selection_layout)
        self.timeline_selection_layout.addLayout(self.date_selections_layout)
        self.side_panel_items_layout.addLayout(self.timeline_selection_layout)

        return self.side_panel

    def select_all_sub_selections(self):
        if self.road_info_checkbox.checkState() == QtCore.Qt.PartiallyChecked:
            self.road_info_checkbox.blockSignals(True)
            self.road_info_checkbox.setCheckState(QtCore.Qt.Checked)
            self.road_info_checkbox.blockSignals(False)

        for checkbox in self.road_info_sub_selection_checkboxes:
            if checkbox.isChecked() != self.road_info_checkbox.isChecked():
                checkbox.blockSignals(True)
                checkbox.setChecked(not checkbox.isChecked())
                checkbox.blockSignals(False)

    def change_sub_selection_state(self):
        sub_selections_checked = len(list(filter(lambda cb: cb.isChecked(), self.road_info_sub_selection_checkboxes)))
        if sub_selections_checked == 0:
            self.road_info_checkbox.blockSignals(True)
            self.road_info_checkbox.setCheckState(not QtCore.Qt.Checked)
            self.road_info_checkbox.blockSignals(False)
        elif 0 < sub_selections_checked < 4:
            self.road_info_checkbox.blockSignals(True)
            self.road_info_checkbox.setCheckState(QtCore.Qt.PartiallyChecked)
            self.road_info_checkbox.blockSignals(False)
        else:
            self.road_info_checkbox.blockSignals(True)
            self.road_info_checkbox.setCheckState(QtCore.Qt.Checked)
            self.road_info_checkbox.blockSignals(False)

    def set_max_min_dates(self):
        print("Date changed")
        min_end_date = self.start_date_edit.date()
        self.end_date_edit.setMinimumDate(min_end_date)

        max_start_date = self.end_date_edit.date()
        self.start_date_edit.setMaximumDate(max_start_date)

    def setup_ui(self, main_window):
        main_window.setObjectName("main_window")
        main_window.resize(1600, 900)
        font = QtGui.QFont()
        font.setPointSize(12)
        main_window.setFont(font)

        self.get_side_panel(main_window)
        self.view_panel = QtWidgets.QTabWidget(main_window)
        self.view_panel.setGeometry(QtCore.QRect(300, 0, 1300, 900))
        self.view_panel.setObjectName("view_panel")

        self.view_panel.addTab(self.get_today_tab(), "")
        self.view_panel.setTabText(self.view_panel.indexOf(self.today_tab), "Today")
        self.view_panel.addTab(self.get_history_tab(), "")
        self.view_panel.setTabText(self.view_panel.indexOf(self.history_tab), "History")
        self.view_panel.addTab(self.get_compare_tab(), "")
        self.view_panel.setTabText(self.view_panel.indexOf(self.compare_tab), "Compare")

        self.view_panel.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(main_window)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    main_window = QtWidgets.QMainWindow()
    main_window.setWindowTitle("Road Watch")
    ui = Ui_main_window()
    ui.setup_ui(main_window)
    main_window.show()
    sys.exit(app.exec_())
